public class Solution {
    private Stack<temp> stack=new Stack<temp>();
    public string ReverseParentheses(string s) {
        for(int i=0;i<s.Length;i++)
        {
            if(s[i]=='(')
            {
                //Console.WriteLine(i);
                stack.Push(new temp(i,s[i]));
            }
                
            else if(stack.Count!=0 && stack.Peek().c=='(' && s[i]==')')
            { 
                temp tmp=stack.Pop();
                //Console.WriteLine(s);
                //Console.WriteLine("First: 0"+" "+tmp.index);
                //Console.WriteLine("Second: "+tmp.index+" "+(i-tmp.index));
                //Console.WriteLine("Third: "+i+" "+(s.Length-i));
                s=s.Substring(0,tmp.index)+reverse(s.Substring(tmp.index,i-tmp.index))+s.Substring(i,s.Length-i);
                //Console.WriteLine(s.Length);
            }
        }
        return stripbrackets(s);
    }
    
    private string reverse(string s)
    {
        StringBuilder sb=new StringBuilder(s);
        for(int i=0,j=sb.Length-1;i<=j;i++,j--)
        {
            if(sb[i]=='(')
                sb[i]=')';
            if(sb[j]==')')
                sb[j]='(';
            char tmp=sb[i];
            sb[i]=sb[j];
            sb[j]=tmp;
        }
        //Console.WriteLine(sb.ToString());
        return sb.ToString();
    }
    
    private string stripbrackets(string s)
    {
        StringBuilder sb=new StringBuilder();
        for(int i=0;i<s.Length;i++)
        {
            if(s[i]!='(' && s[i]!=')')
                sb.Append(s[i]);
                
        }
        return sb.ToString();
    }
}
